{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/juguete-list/juguete-list.component.ts","./src/app/components/juguete-list/juguete-list.component.html","./src/app/components/juguete/juguete.component.ts","./src/app/components/juguete/juguete.component.html","./src/app/services/juguetes.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { JugueteListComponent } from './components/juguete-list/juguete-list.component';\nimport { JugueteComponent } from './components/juguete/juguete.component';\n\nconst routes: Routes = [\n\n  { path: '', component: JugueteListComponent },\n  { path: 'juguete/:id', component: JugueteComponent },\n  { path: '**', component: JugueteListComponent }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabledBlocking'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'oag';\n}\n","\n\n\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule} from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatTabsModule} from '@angular/material/tabs'; \nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatIconModule} from '@angular/material/icon'; \nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'; \nimport { PrebootModule } from 'preboot';\nimport { JugueteComponent } from './components/juguete/juguete.component';\nimport { JugueteListComponent } from './components/juguete-list/juguete-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JugueteComponent,\n    JugueteListComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    PrebootModule.withConfig({ appRoot: 'app-root' }),\n    MatCardModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Juguetes } from 'src/app/models/juguetes.interface';\nimport { JuguetesService } from 'src/app/services/juguetes.service';\n\n@Component({\n  selector: 'app-juguete-list',\n  templateUrl: './juguete-list.component.html',\n  styleUrls: ['./juguete-list.component.scss']\n})\nexport class JugueteListComponent implements OnInit {\n\n  juguetes!:Juguetes;\n  loaded:boolean = false;\n\n  constructor( private juguetesService: JuguetesService) { }\n\n  ngOnInit(): void {\n\n    this.juguetesService.getAllJuguetes().subscribe({\n\n      next:(juguetes: Juguetes) => {\n        if (juguetes)\n          this.juguetes = juguetes;\n          this.loaded = true;\n          console.log(this.juguetes);\n      }\n    });\n  }\n\n}\n","\n<div class=\"text-center my-5 fs-1\">\n    <p class=\"\">Lista de juguetes</p>\n</div>\n\n<div class=\"content\">\n    \n    <div *ngIf=\"!loaded\">\n        <mat-spinner></mat-spinner>\n    </div>\n\n\n    <div fxLayout=\"row wrap\" fxLayoutGap =\"16px grid\">\n            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\"  *ngFor=\"let juguete of juguetes.data \"  > \n                <a class=\"text-decoration-none \"  [routerLink]=\"['/juguete/', juguete.id  ]\" >\n                <div class=\"animate__animated animate__pulse \">\n                    <mat-card class=\"example-card \">\n\n                        <img src=\"\" class=\"img-fluid mb-4\">\n\n                        <mat-card-title-group>\n                            <mat-card-title> {{ juguete.nombre_juguete }}</mat-card-title>\n                            <mat-card-subtitle> {{ juguete.fecha_publicacion }}</mat-card-subtitle>\n                        </mat-card-title-group>\n                        <mat-card-content>\n                            <p>Descripci√≥n:</p>\n                            <p>{{ juguete.descripcion }}</p>\n                            \n                        </mat-card-content>\n                    </mat-card>\n                </div>    \n                </a>\n            </div>\n    </div>\n    \n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Juguete } from 'src/app/models/juguete.interface';\nimport { JuguetesService } from 'src/app/services/juguetes.service';\n\n\n@Component({\n  selector: 'app-juguete',\n  templateUrl: './juguete.component.html',\n  styleUrls: ['./juguete.component.scss']\n})\nexport class JugueteComponent implements OnInit {\n\n  juguete!: Juguete;\n  showDetails:boolean = false;\n\n  constructor(\n      private activatedRoute:ActivatedRoute,\n      private router:Router,\n      private juguetesService: JuguetesService\n    ) { }\n\n  ngOnInit(): void {\n\n    const identifier:string = <string>this.activatedRoute.snapshot.paramMap.get('id');\n    console.log('identifier --> ', identifier );\n\n    this.juguetesService.getJugueteById(identifier).subscribe({\n\n      next:(juguete:Juguete) => {\n        this.juguete = juguete;\n      },\n      error:()=> {\n        return this.router.navigateByUrl('/');\n      }\n\n    });\n  }\n\n  showAllDetails():void {\n\n    this.showDetails = !this.showDetails;\n\n  }\n\n\n}\n","\n\n\n\n<div class=\"container mt-5\">\n    <div *ngIf=\"juguete.data\" class=\"row\">\n\n        <div class=\"col-md-7\">\n\n            <div class=\"my-5 text-end\">\n                <a class=\"btn btn-secondary\" routerLink=\"/\">Volver</a>\n            </div>\n    \n            <h2><strong>Nombre Juguete: </strong> {{ juguete.data.nombre_juguete }}</h2>\n            <img src=\"{{ juguete.data.path_imagen }}\" class=\"img-fluid mb-4\"> -->\n\n            <div class=\"text-center my-4\">\n                <button mat-raised-button color=\"primary\" (click)=\"showAllDetails();\">Mostrar detalles</button>\n            </div>\n            <mat-tab-group *ngIf=\"showDetails\">\n                <mat-tab label=\"Descripci√≥n juguete\"> \n                    <p class=\"text-left my-3\">{{ juguete.data.descripcion }}</p>\n                </mat-tab>\n                <mat-tab label=\"Categor√≠a\">\n                    <p class=\"text-left my-3\"><strong>Categor√≠a:</strong> {{ juguete.data.categorias }}</p>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n\n    \n    </div>\n    \n</div>\n\n  \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Juguete } from '../models/juguete.interface';\nimport { Juguetes } from '../models/juguetes.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JuguetesService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getAllJuguetes():Observable<Juguetes> {\n    //return this.http.get<Stadiums>('https://myfakeapi.com/api/football/stadiums');\n    return this.http.get<Juguetes>('/juguetes');\n  }\n\n  getJugueteById(identifier:string):Observable<Juguete> {\n    return this.http.get<Juguete>('http://ec2-52-47-148-224.eu-west-3.compute.amazonaws.com/juguete/' + identifier);\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\nif (document.readyState === 'complete') {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n"],"names":[],"sourceRoot":"webpack:///"}